// Grid max width
@function gridMaxWidth() {
  @if $gridMaxWidth == auto {
    @return ($gridColumns * $gridColumnWidth) + (($gridColumns - 1) * $gridGutter);
  }
  @else {
    @return $gridMaxWidth;
  }
}

// Grid column width
@function columnWidth($columns) {
  @return (($columns * $gridColumnWidth) + (($columns - 1) * $gridGutter)) / (($gridColumns * $gridColumnWidth) + (($gridColumns - 1) * $gridGutter)) * 100%;

}

// Grid gutter
@function gridGutter() {
  @return $gridGutter / (($gridColumns * $gridColumnWidth) + (($gridColumns - 1) * $gridGutter)) * 100%;
}

@mixin row() {
  width: 100%;
  max-width: gridMaxWidth();
  margin: 0 auto;
  *zoom: 1;
  &:before, &:after {
      content: " ";
      display: table;
  }
  &:after {
      clear: both;
  }
}

@mixin col($columns: $gridColumns) {
  position: relative;
  margin-left: 0;
  margin-right: gridGutter();
  width: columnWidth($columns);
  float: left;
}
@mixin last() {
  margin-right: 0;
}
@mixin show() {
  background-image: linear-gradient(to right, rgba(255, 0, 0, 0.1), rgba(255, 77, 77, 0.1) ($gridColumnWidth / ($gridColumnWidth + $gridGutter) * 100%), transparent ($gridColumnWidth / ($gridColumnWidth + $gridGutter) * 100%));
  background-size: ($gridColumnWidth + $gridGutter) / (($gridColumns * $gridColumnWidth) + (($gridColumns - 1) * $gridGutter)) * 100%;
  background-origin: content-box;
  background-clip: content-box;
  background-position: left top;
}