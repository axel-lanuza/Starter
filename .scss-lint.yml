# All available settings
# https://github.com/brigade/scss-lint/blob/master/lib/scss_lint/linter/README.md

# Default application configuration that all configurations inherit from
scss_files: "sass/**/*.scss"
plugin_directories: ['.scss-linters']

# List of gem names to load custom linters from
plugin_gems: []

# Linters configurations
linters:

  # Reports when you use improper spacing around !
  BangFormat:
    enabled: true
    space_before_bang: true
    space_after_bang: false

  # Reports when a BEM selector contains more elements than a configurable
  BemDepth:
    enabled: true
    max_elements: 1

  # Prefer the terser border: 0 over border: none
  BorderZero:
    enabled: true
    convention: zero

  # Prefer hexadecimal color codes over color keywords
  ColorKeyword:
    enabled: true

  # Prefer color literals to be used only in variable declarations
  ColorVariable:
    enabled: false

  # Prefer // ... comments over /* ... */
  Comment:
    enabled: true

  # Reports @debug statements (which you probably left behind accidentally)
  DebugStatement:
    enabled: true

  # Rule sets should be ordered as follows:
  # @extend declarations, @include declarations without inner @content,
  # properties, @include declarations with inner @content, nested rule sets
  DeclarationOrder:
    enabled: true

  # Comment explaining why these linters are being disabled
  DisableLinterReason:
    enabled: false

  # Reports when you define the same property twice in a single rule set
  DuplicateProperty:
    enabled: true

  # Place @else statements on the same line as the preceding curly brace
  ElsePlacement:
    enabled: true
    style: new_line

  # Separate rule, function, and mixin declarations with empty lines
  EmptyLineBetweenBlocks:
    enabled: true
    ignore_single_line_blocks: true

  # Reports when you have an empty rule set
  EmptyRule:
    enabled: true

  # Reports when you have an @extend directive
  ExtendDirective:
    enabled: true

  # Files should always have a final newline
  FinalNewline:
    enabled: true
    present: true

  # You can specify whether you prefer shorthand or long-form hexadecimal colors
  HexLength:
    enabled: true
    style: short

  # Checks if hexadecimal colors are written in lowercase
  HexNotation:
    enabled: true
    style: lowercase

  # Ensure hexadecimal colors are valid (either three or six digits)
  HexValidation:
    enabled: true

  # Avoid using ID selectors
  IdSelector:
    enabled: true

  # Avoid using !important in properties
  ImportantRule:
    enabled: true

  # The basenames of @imported SCSS partials
  ImportPath:
    enabled: true
    leading_underscore: false
    filename_extension: false

  # Use two spaces per indentation level
  Indentation:
    enabled: true
    allow_non_nested_indentation: true
    character: space
    width: 2

  # Don't write leading zeros for numeric values with a decimal point
  LeadingZero:
    enabled: true
    style: exclude_zero # or 'include_zero'

  # Reports when you define the same selector twice in a single sheet
  MergeableSelector:
    enabled: true
    force_nesting: false

  # Functions, mixins, variables, and placeholders should be declared with
  # all lowercase letters and hyphens instead of underscores
  NameFormat:
    enabled: true
    allow_leading_underscore: true
    convention: hyphenated_lowercase # or 'camel_case', or 'snake_case', or a regex pattern

  # Avoid nesting selectors too deeply
  NestingDepth:
    enabled: true
    max_depth: 3
    ignore_parent_selectors: false

  # Always use placeholder selectors in @extend
  PlaceholderInExtend:
    enabled: true

  # Limit the number of properties in a rule set
  PropertyCount:
    enabled: false
    include_nested: false
    max_properties: 10

  # Sort properties in a strict order
  PropertySortOrder:
    enabled: true
    ignore_unspecified: false
    min_properties: 2
    order: smacss
    separate_groups: false

  # Reports when you use an unknown CSS property
  PropertySpelling:
    enabled: true
    extra_properties: []

  # Configure which units are allowed for property values
  PropertyUnits:
    enabled: true
    global: [
      'ch', 'em', 'ex', 'rem',                 # Font-relative lengths
      'cm', 'in', 'mm', 'pc', 'pt', 'px', 'q', # Absolute lengths
      'vh', 'vw', 'vmin', 'vmax',              # Viewport-percentage lengths
      'deg', 'grad', 'rad', 'turn',            # Angle
      'ms', 's',                               # Duration
      'Hz', 'kHz',                             # Frequency
      'dpi', 'dpcm', 'dppx',                   # Resolution
      '%']                                     # Other
    properties: {}

  # Avoid qualifying elements in selectors
  QualifyingElement:
    enabled: true
    allow_element_with_attribute: false
    allow_element_with_class: false
    allow_element_with_id: false

  # Don't write selectors with a depth of applicability greater than 3
  SelectorDepth:
    enabled: true
    max_depth: 3

  # It is good practice to choose a convention for naming selectors
  SelectorFormat:
    enabled: true
    convention: strict_BEM # or 'hyphenated_lowercase', or 'hyphenated_BEM', or 'snake_case', or 'camel_case', or a regex pattern

  # Prefer the shortest shorthand form possible for properties that support it
  Shorthand:
    enabled: true
    allowed_shorthands: [1, 2, 3]

  # Properties within rule sets should each reside on their own line
  SingleLinePerProperty:
    enabled: true
    allow_single_line_rule_sets: true

  # Split selectors onto separate lines after each comma
  SingleLinePerSelector:
    enabled: true

  # Commas in lists should be followed by a space
  SpaceAfterComma:
    enabled: true

  # Single space separating the colon from the property's value
  SpaceAfterPropertyColon:
    enabled: true
    style: one_space

  # Properties should be formatted with no space between the name and the colon
  SpaceAfterPropertyName:
    enabled: true

  # Variables should be formatted with no space between the name and the colon
  SpaceAfterVariableName:
    enabled: true

  # Single space on both sides of an infix operator
  SpaceAroundOperator:
    enabled: true
    style: one_space

  # Opening braces should be preceded by a single space
  SpaceBeforeBrace:
    enabled: true
    style: space # or 'new_line'
    allow_single_line_padding: false

  # Parentheses should not be padded with spaces
  SpaceBetweenParens:
    enabled: true
    spaces: 0

  # Single quotes unless using double quotes would save on escape characters
  StringQuotes:
    enabled: true
    style: single_quotes

  # @extend, @include, @import and variable should end with a semicolon
  TrailingSemicolon:
    enabled: true

  # Reports lines containing trailing whitespace
  TrailingWhitespace:
    enabled: true

  # Don't write trailing zeros for numeric values with a decimal point
  # Extra zeros are unnecessary and  add additional bytes to CSS
  TrailingZero:
    enabled: false

  # Don't use the all keyword to specify transition properties
  TransitionAll:
    enabled: false

  # Numeric values should not contain unnecessary fractional portions
  UnnecessaryMantissa:
    enabled: true

  # Do not use parent selector  (&) when they would otherwise be unnecessary
  UnnecessaryParentReference:
    enabled: true

  # URLs should not contain protocols or domain names
  UrlFormat:
    enabled: true

  # URLs should always be enclosed within quotes
  UrlQuotes:
    enabled: true

  # Properties, like color and font, are easier to read and maintain
  # when defined using variables rather than literals
  VariableForProperty:
    enabled: false
    properties: []

  # Avoid vendor prefixes. That is, don't write them yourself
  VendorPrefix:
    enabled: true
    identifier_list: base
    additional_identifiers: []
    excluded_identifiers: []

  # Omit length units on zero values.
  ZeroUnit:
    enabled: true

  Compass::*:
    enabled: false
